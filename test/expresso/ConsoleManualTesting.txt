Console Interface -- Manual Testing
We tested the consoles independently on several inputs.

We also tested the console together on several inputs.

Among these many, a subset of them covering all reasonable partitions have
been carefully documented as follows. Correct behavior was always observed viz:

1) CORRECT PARSER BEHAVIOR
a) valid inputs

try: x
obtain: x
try: y
obtain: y
try: x*y
obtain: (x)*(y)
try: x+y
obtain: (x) + (y)
try: zebra * alpha
obtain: (zebra) * (alpha)
try: x + x + x +    y
obtain: (x) + ((x) + ((x) + (y)))
try: xy*yx
obtainL (xy) * (yx)
try: x*y*y*x
obtain: (((x) * (y)) * (y)) * (x)
try: (((x))) + (((y))) + ((x*y))
obtain: (x) + ((y) + ((x) * (y)))

b) invalid inputs
The following invalid inputs all result
in ParseError string messages being thrown

x3
3x
x y
x * y * z x
(1+x)^2
(1+x)(1+x)
x*3 y*4
((x)) + ((2)
(x+(2)
x+((2))x


2) CORRECT HANDLING OF COMMANDS
a) Valid Commands
Expression: x*x
try: !d/dx
obtain: ((x) * (1)) + ((x) * (1))
try: !simplify
obtain: 2*x
try: !d/dzebra
obtain: ((2) * (0)) + ((x) * (0))
try: !simplify
obtain: 0
try: !d/dy
obtain: 0

b) Invalid commands
The following invalid commands, when attempted
to be evaluated on x*x all result in ParseError:
Please enter a valid command!

!d/d
d/d
d/dx
!ddx
!simplif
!goodbye



3) CORRECT UPDATING OF EXPRESSIONS

a) Correctly update newly written expressions
(tested in 1a)

b) Correctly update expressions with result of command
(tested in 2a)
Additional testing for 2b:
try: x*x*x + x*x
obtain: (((x) * (x)) * (x)) + ((x) * (x))
try: !d/dx
obtain: ((((x) * (x)) * (1)) + ((x) * (((x) * (1)) + ((x) * (1))))) + (((x) * (1)) + ((x) * (1)))
try: !simplify
obtain: 3*x*x+2*x
try: !d/dx
obtain: ((((3) * (x)) * (1)) + ((x) * (((3) * (1)) + ((x) * (0))))) + (((2) * (1)) + ((x) * (0)))
try: !simplify
obtain: 6*x+2
try: !d/dzebra
obtain: (((6) * (0)) + ((x) * (0))) + (0)
try: !simplify
obtain: 0


4) ADD AND SIMPLIFY 
try: x + y + z + 1 + 3
obtain: (x) + ((y) + ((z) + ((1) + (3))))
try: !simplify
obtain: z+y+x+4

try: x*x + 3*x*x + 5*x*x
obtain: ((x) * (x)) + ((((3) * (x)) * (x)) + (((5) * (x)) * (x)))
try: !simplify
obtain: 9*x*x


try: z + z*y
obtain: (z) + ((z) * (y))
try: !simplify
obtain: y*z+z

try: x*x*x + y*y*y + x*x*x*x*x + y*y*y + x*x*x*5
obtain: (((x) * (x)) * (x)) + ((((y) * (y)) * (y)) + ((((((x) * (x)) * (x)) * (x)) * (x)) + ((((y) * (y)) * (y)) + ((((x) * (x)) * (x)) * (5)))))
try: !simplify
obtain: x*x*x*x*x+2*y*y*y+6*x*x*x

try: 0.5 + 0.5*x + 0.5*x*x + 0.5*x*x*x
obtain: (0.5) + (((0.5) * (x)) + ((((0.5) * (x)) * (x)) + ((((0.5) * (x)) * (x)) * (x))))
try: !simplify
obtain: 0.5*x*x*x+0.5*x*x+0.5*x+0.5



5) MULTIPLY AND SIMPLIFY
try: 3.0*5.0*7.0
obtain: ((3) * (5)) * (7)
try: !simplify
obtain: 105

try: 3.3 * 5.5 * 7.7
obtain: ((3.3) * (5.5)) * (7.7)
try: !simplify
obtain: 139.755

try: 3*x*5 + 5*x*3
obtain: (((3) * (x)) * (5)) + (((5) * (x)) * (3))
try: !simplify
obtain: 30*x

try: x*y*x + y*x*x + x*x*y + 0.5*x*x*y + 0*x*y*x
obtain: (((x) * (y)) * (x)) + ((((y) * (x)) * (x)) + ((((x) * (x)) * (y)) + (((((0.5) * (x)) * (x)) * (y)) + ((((0) * (x)) * (y)) * (x)))))
try: !simplify
obtain: 3.5*x*x*y

try: x*x*y*z*x*30*210*zebra*0.01*x*x
obtain: ((((((((((x) * (x)) * (y)) * (z)) * (x)) * (30)) * (210)) * (zebra)) * (0.01)) * (x)) * (x)
try: !simplify
obtain: 63*x*x*x*x*x*y*z*zebra


6) DERIVATIVES AND SIMPLIFY
try: x*x
obtain: (x)*(x)
try: !d/dx
obtain: ((x) * (1)) + ((x) * (1))
try: !simplify
obtain: 2*x
try: !d/dx
obtain: ((2) * (1)) + ((x) * (0))
try: !simplify
obtain: 2
try: !d/dx
obtain: 0

try: x*y*x + y*x*y
obtain: (((x) * (y)) * (x)) + (((y) * (x)) * (y))
try: !d/dx
obtain: ((((x) * (y)) * (1)) + ((x) * (((x) * (0)) + ((y) * (1))))) + ((((y) * (x)) * (0)) + ((y) * (((y) * (1)) + ((x) * (0)))))
try: !simplify
obtain: y*y+2*x*y
try: !d/dy
obtain: (((y) * (1)) + ((y) * (1))) + ((((2) * (x)) * (1)) + ((y) * (((2) * (0)) + ((x) * (0)))))
try: !simplify
obtain: 2*y+2*x
try: !d/dgorilla
obtain: (((2) * (0)) + ((y) * (0))) + (((2) * (0)) + ((x) * (0)))
try: !simplify
obtain: 0

7) SPACING

try: x  *  x + 3  * x *  x + 5 * x * x
obtain: ((x) * (x)) + ((((3) * (x)) * (x)) + (((5) * (x)) * (x)))
try: !simplify
obtain: 9*x*x


try: z + z    *   y
obtain: (z) + ((z) * (y))
try: !simplify
obtain: y*z+z

try: x   *   x   *   x + y   *y  *  y + x* x* x * x* x + y* y* y + x* x* x*  5
obtain: (((x) * (x)) * (x)) + ((((y) * (y)) * (y)) + ((((((x) * (x)) * (x)) * (x)) * (x)) + ((((y) * (y)) * (y)) + ((((x) * (x)) * (x)) * (5)))))
try: !simplify
obtain: x*x*x*x*x+2*y*y*y+6*x*x*x

try: 3   *   x*   5 + 5   *    x*   3
obtain: (((3) * (x)) * (5)) + (((5) * (x)) * (3))
try: !simplify
obtain: 30*x



8) MULTIVARIABLE SIMPLIFY

try: x*y*z*p + p*z*y*x + p*33*x*y*z
obtain: ((((x) * (y)) * (z)) * (p)) + (((((p) * (z)) * (y)) * (x)) + (((((p) * (33)) * (x)) * (y)) * (z)))
try: !simplify
obtain: 35*p*x*y*z

try: xz*zx + 3*xz + 4*zx*5*xz + 3*xz
obtain: ((xz) * (zx)) + (((3) * (xz)) + (((((4) * (zx)) * (5)) * (xz)) + ((3) * (xz))))
try: !simplify
obtain: 21*xz*zx+6*xz

9) MULTIPLE EXPONENTS SIMPLIFY

try: x*x*x*x*x + x*x*x + 3*x*x + 15.0*x*x*x + 2*x + 5 + 7 + 2.3*x*x*x*x*x
obtain: (((((x) * (x)) * (x)) * (x)) * (x)) + ((((x) * (x)) * (x)) + ((((3) * (x)) * (x)) + (((((15) * (x)) * (x)) * (x)) + (((2) * (x)) + ((5) + ((7) + ((((((2.3) * (x)) * (x)) * (x)) * (x)) * (x))))))))
try: !simplify
obtain: 3.3*x*x*x*x*x+16*x*x*x+3*x*x+2*x+12

try: xy*xy*xy+xy*z+z*z*z+z*z+3*z*xy+x*y+xy*xy*3*xy+xy*xy+xy
obtain: (((xy) * (xy)) * (xy)) + (((xy) * (z)) + ((((z) * (z)) * (z)) + (((z) * (z)) + ((((3) * (z)) * (xy)) + (((x) * (y)) + (((((xy) * (xy)) * (3)) * (xy)) + (((xy) * (xy)) + (xy))))))))
try: !simplify
obtain: z*z*z+4*xy*xy*xy+z*z+xy*xy+4*xy*z+xy+x*y


10) PRECEDENCE AND GROUPED EXPRESSION CORRECT HANDLING

Precedence
try: x*x+1
obtain: ((x) * (x)) + (1)
try: !simplify
obtain: x*x+1

Grouping
try: x*(x+1)
obtain: (x) * ((x) + (1))
try: !simplify
obtain: x*x+x


Precedence
try: 2+3*4+5
obtain: (2) + (((3) * (4)) + (5))
try: !simplify
obtain: 19

Grouping
try: (2+3)*(4+5)
obtain: ((2) + (3)) * ((4) + (5))
try: !simplify
obtain: 45

Precedence
try: x*y*z+z*1+x*1+x
obtain: (((x) * (y)) * (z)) + (((z) * (1)) + (((x) * (1)) + (x)))
try: !simplify
obtain: x*y*z+z+2*x

Grouping
try: ((x*y*((z))+z))*1+(x*1+x)
obtain: ((((x) * (y)) * ((z) + (z))) * (1)) + (((x) * (1)) + (x))
try: !simplify
obtain: 2*x*y*z+2*x



 